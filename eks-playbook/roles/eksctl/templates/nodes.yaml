# Node group sys-eks
  - name: sys-eks
    # ami: ami-01a9c9d805568fa3b
    labels: {pool: sys-eks}
    desiredCapacity: 1
    minSize: 1
    maxSize: 5
    volumeSize: 25
    volumeType: gp2
    instancesDistribution:
        instanceTypes: ['t3.medium', 't3.small'] # At least two instance types should be specified
        onDemandBaseCapacity: 1
        onDemandPercentageAboveBaseCapacity: 10
        spotInstancePools: 5
    iam:
      attachPolicyARNs:
       - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
       - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
       - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
      withAddonPolicies:
        autoScaler: true
    privateNetworking: true
    # securityGroups:
    #  withShared: true
    #  withLocal: true
    #  attachIDs: ['sg-0b5c09249a8e7f578']
    ssh: # use existing EC2 key
      publicKeyName: us-west-2-devops-poli
    tags:
      'App': 'eks'
      'Env': '{{ env }}'
      'Name': 'eks-sys-eks'
      'Project': 'space trip'
# Node group backend
  - name: backend
    # ami: ami-01a9c9d805568fa3b
    labels: {pool: backend}
    desiredCapacity: 1
    minSize: 1
    maxSize: 3
    volumeSize: 25
    volumeType: gp2
    instancesDistribution:
        instanceTypes: ['t3.medium', 't3.small'] # At least two instance types should be specified
        onDemandBaseCapacity: 1
        onDemandPercentageAboveBaseCapacity: 25
        spotInstancePools: 5
    iam:
      attachPolicyARNs:
       - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
       - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
       - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
      withAddonPolicies:
        autoScaler: true
    privateNetworking: true
    # securityGroups:
    #  withShared: true
    #  withLocal: true
    #  attachIDs: ['sg-0b5c09249a8e7f578']
    ssh: # use existing EC2 key
      publicKeyName: us-west-2-devops-poli
    tags:
      'App': 'eks'
      'Env': '{{ env }}'
      'Name': 'eks-backend'
      'Project': 'space trip'
